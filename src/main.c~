#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "fields.h"
#include "jval.h"
#include "jrb.h"
#include "dllist.h"

int main(int argc, char **argv)
{
  IS is;
  Dllist kelimeler;
  Dllist kodlar;
  //Dllist tmp;
  JRB kriptoTree;
  //JRB decodeTree;
  JRB tmp;
  Jval jv;
  
  
  char *kelime;
  char kelime2[100];
  char karakterDizisi[100];
  

  // Yeni bir dosya okuyucusu tanımla
  is = new_inputstruct(".kilit"); // NULL --> stdin
  //kodlar = new_dllist();
  //kelimeler = new_dllist();
  kriptoTree = make_jrb();
  //decodeTree = make_jrb();
                         
                                    
  while(get_line(is) >= 0) {
    if(is->NF != 1){
      for(int i = 0; i < is->NF; i++) {
         kelime = strtok(is->fields[i], ":");
         kelime = strtok(kelime, "\"");

         //if(get_line(is) != 1 || j != get_line(is)){
	  
         if(i%2 == 0){
             //dll_append(kelimeler, new_jval_s(strdup(kelime)));
	      
             strcpy(kelime2,strdup(kelime));
             //printf("%s", kelime);
          }
          else{
              //dll_append(kodlar, new_jval_s(strdup(kelime)));
              //jv = new_jval_s(strdup(kelime));
	    jrb_insert_str(kriptoTree, strdup(kelime2), new_jval_s(strdup(kelime)));
          }
        }
    }
      
	
      //(void)jrb_insert_str(kriptoTree, kelimeler->val.s, new_jval_s(strdup(kodlar->val.s)));
  //jrb_insert_str(kriptoTree, kelime2, jv);
       
       
     
     
  }
  
  
   

  /*
  //printf("Kelime sayısı: %d\n", is->NF);
  /*dll_traverse(tmp, kelimeler) printf(" %s", tmp->val.s);
  dll_traverse(tmp, kodlar) printf(" %s", tmp->val.s);*/
  
    //printf("%s", Jval dll_val( );
  //for(int i = 0; i < 3; i++) {
  //  l = l->flink;
  //}
  
  /*
  if(argv[1] == "-e") {
    jrb_traverse(tmp2, encodeTree) {
      printf("%-40s %2s\n", tmp2->key.s, tmp2->val);
    }
  }

  */
  

	jrb_traverse(tmp, kriptoTree) printf(" %s  %s \n", tmp->key, tmp->val.s);
 
    
  

  //printf("%s", l->val.s);
  
    
  
  // Çıkmadan önce bellekte kullanılan yerlerin geri bırakılması
  jettison_inputstruct(is);
  return 0;
}
